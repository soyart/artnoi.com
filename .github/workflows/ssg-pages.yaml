name: ssg-pages

on:
  workflow_dispatch:
    inputs:
      ssg-go-ref:
        type: string
        required: false
        default: master
        description: "Git SHA1 or refs to pull and build soyweb from"

      dist:
        type: string
        required: true
        description: Build directory, i.e. the where the built static site files are put into.

      deploy_branch:
        type: string
        required: true
        description: |
          Target deploy branch name.
          When building from branch 'example.com', it's recommended to set deploy_branch to 'deploy/example.com' or 'publish/example.com'

      wipe_deploy_branch:
        type: boolean
        required: true
        description: |
          Option to wipe deploy branch when deploying.
          If true, the deploy branch will only contain artifacts from the last commit

      # Custom domain name. This will create file CNAME at the root of dist to be copied to deploy branch
      cname:
        type: string
        required: false
        description: Domain name for ${publish_branch_root}/CNAME

  workflow_call:
    inputs:
      ssg-go-ref:
        type: string
        required: false
        default: master

      dist:
        type: string
        required: true
        description: Build directory, i.e. the where the built static site files are put into.

      deploy_branch:
        type: string
        required: true
        description: |
          Target deploy branch name.
          When building from branch 'example.com', it's recommended to set deploy_branch to 'deploy/example.com' or 'publish/example.com'

      wipe_deploy_branch:
        type: boolean
        required: true
        description: |
          Option to wipe deploy branch when deploying.
          If true, the deploy branch will only contain artifacts from the last commit

      # Custom domain name. This will create file CNAME at the root of dist to be copied to deploy branch
      cname:
        type: string
        required: false

jobs:
  build:
    name: Build static sites
    runs-on: ubuntu-latest
    steps:
      - name: Install Nix
        uses: cachix/install-nix-action@v30
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          # For some reasons, clean: false does not work now.
          # This forces us to use nix build from GitHub remote
          # and not from the downloaded release in step release-ssg-go.
          clean: false

      - name: Build ssg-go from ${{ inputs.ssg-go-ref }}
        run: |
          echo "[ssg-pages] Inspecting $(pwd) before building ssg-go with nix"
          tree .

          nix build "github:soyart/soyweb?ref=${{ inputs.ssg-go-ref }}"
          echo "[ssg-pages] Inspecting built soyweb"
          tree .

      - name: Build outputs from /manifest.json
        run: |
          echo "[ssg-pages] Inspecting before building"
          tree .

          if [ -x ./result/bin/soyweb ]; then
            echo "[ssg-pages] Using soyweb"
            ./result/bin/soyweb build --min-html --min-html-copy --min-css --min-js

          elif [ -x ./result/bin/ssg-manifest ]; then
            echo "[ssg-pages] Using ssg-manifest"
            ./result/bin/ssg-manifest build --gen-index --min-html --min-html-copy --min-css --min-js

          else
            echo "[ssg-pages] Missing executable"
            exit 2

          fi;

          echo "[ssg-pages] Build: ok"
          echo "[ssg-pages] Inspecting after building"
          tree .

      # Prepare CNAME for GitHub Pages with custom domain
      - name: CNAME ${{ inputs.cname }}
        if: inputs.cname != ''
        run: echo "[ssg-pages] ${{ inputs.cname }} > ${{ inputs.dist }}/CNAME"

      - name: Deploy to ${{ inputs.deploy_branch }}
        uses: peaceiris/actions-gh-pages@364c31d33bb99327c77b3a5438a83a357a6729ad # v3.4.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: ${{ inputs.deploy_branch }}
          publish_dir: ${{ inputs.dist }}
          force_orphan: $ {{ inputs.wipe_deploy_branch }}

  deploy:
    name: Deploy from branch ${{ inputs.deploy_branch }}
    needs: build
    uses: ./.github/workflows/deploy_branch.yaml
    with:
      branch_name: ${{ inputs.deploy_branch }}
      path: "."
